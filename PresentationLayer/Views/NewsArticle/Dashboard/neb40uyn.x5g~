@using PresentationLayer.Models.NewsArticleModel
@using System.Security.Claims
@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@model List<NewsArticleViewModel>


@await Html.PartialAsync("~/Views/NewsArticle/Dashboard/Partial/_Create.cshtml", new NewsArticleCreateViewModel())
<form class="mb-3" method="get" action="@Url.Action("GetAllDashboard", "NewsArticle")">
    <div class="row">
        <div class="col-md-4">
            <label for="startDate">Start Date</label>
            <input type="date" id="startDate" name="dateStart" class="form-control" value="@Context.Request.Query["dateStart"]" />
        </div>
        <div class="col-md-4">
            <label for="endDate">End Date</label>
            <input type="date" id="endDate" name="dateEnd" class="form-control" value="@Context.Request.Query["dateEnd"]" />
        </div>
        <div class="col-md-4">
            <div class="form-check">
                <label class="form-check-label">
                    <input class="form-check-input" type="checkbox" name="filterByCreator" id="createdBy" value="true" @(Context.Request.Query["filterByCreator"] == "true" ? "checked" : "")>
                    <span class="form-check-sign">Created by Me</span>
                </label>
            </div>
        </div>
        
        <div class="col-md-4 d-flex align-items-end">
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
    </div>
</form>




<div class="table-responsive">
    <table class="table table-bordered-bd-warning table-head-bg-default" id="tbl-news">
		<thead>
			<tr>
				<th>ID</th>
				<th>News Tile</th>
				<th>Created Date</th>
				<th>Category</th>
				<th>Created By</th>
				<th>Update By</th>
				<th>Modify Date</th>
				<th>News Status</th>
                <th>Action</th>
			</tr>
		</thead>
		<tbody>
            @foreach (NewsArticleViewModel item in Model)
			{
				<tr>
					<td>@item.NewsArticleID</td>
					<td>@item.NewsTitle</td>
					<td>@item.CreatedDate</td>
					<td>@item.CategoryName</td>
					<td>@item.CreatedByName</td>
                    <td>@item.UpdatedByName</td>
					<td>@item.ModifiedDate</td>
                    <td>@(item.NewsStatus ? "Active" : "Inactive")</td>
                    <td>
                        <a asp-action="GetDashboard" asp-controller="NewsArticle" asp-route-id="@item.NewsArticleID">
                            Detail
                        </a>
                        <a href="javascript:void(0);" onclick="loadUpdateForm('@item.NewsArticleID')">
                            Update
                        </a>
                        <a href="javascript:void(0);" onclick="confirmDelete(@item.NewsArticleID, '@item.NewsTitle')">
                            Delete
                        </a>
                    </td>
				</tr>
			}
			
		</tbody>
	</table>
</div>
<button type="button" class="btn btn-success" data-toggle="modal" data-target="#createNewsModal">
    + Create News Article
</button>
<div id="modalUpdate"></div>
@section Scripts {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css">
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
	<script>
        $(document).ready(function () {
            $("#tbl-news").DataTable();
        });
        document.getElementById("createdBy").addEventListener("change", function () {
            if (!this.checked) {
                this.value = "";
            } else {
                this.value = "@User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Sid)?.Value";
            }
        });
        function loadUpdateForm(id) {
            $.ajax({
                url: '@Url.Action("Update", "NewsArticle")/' + id,
                type: 'GET',
                success: function (result) {
                    $('#modalUpdate').html(result);
                    $('#updateNewsModal').modal('show');
                }
            });
        }

        function confirmDelete(id, title) {
            Swal.fire({
                title: 'Are you sure?',
                text: `Do you want to delete "${title}"?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    deleteArticle(id);
                }
            });
        }

        function deleteArticle(id) {
            $.ajax({
                url: `/NewsArticle/Delete/${id}`,
                type: 'POST',
                success: function (result) {
                    if (result.success) {
                        // Remove the row from the table
                        $(`#row-${id}`).fadeOut('slow', function () {
                            $(this).remove();
                        });

                        // Show success message
                        Swal.fire({
                            title: 'Deleted!',
                            text: result.message,
                            icon: 'success',
                            timer: 2000,
                            showConfirmButton: true,
                        }).then((result) => {
                            if (result.isConfirmed) {
                                location.reload();
                            }
                        });
                    } else {
                        // Show error message
                        Swal.fire({
                            title: 'Error!',
                            text: result.message,
                            icon: 'error'
                        });
                    }
                },
                error: function () {
                    Swal.fire({
                        title: 'Error!',
                        text: 'Failed to delete the article. Please try again.',
                        icon: 'error'
                    });
                }
            });
        }
        $(document).ready(function () {
            // Create News Article
            $("#createNewsForm").submit(function (event) {
                event.preventDefault();

                    $.ajax({
                        url: "@Url.Action("Create", "NewsArticle")",
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (response) {
                            if (response.success) {
                                // Success: hide modal and reload page
                                Swal.fire({
                                    icon: "success",
                                    title: "Account Created!",
                                    text: "The account has been successfully created.",
                                    showConfirmButton: false,
                                    timer: 2000 // Auto-close after 2 seconds
                                }).then(() => {
                                    $("#createAccountModal").modal("hide");
                                    location.reload(); // Refresh the page (optional)
                                });
                            } else {
                                // Handle server-side validation or other errors
                                if (response.errors) {
                                    // Display validation errors returned from server
                                    displayValidationErrors(response.errors);
                                } else if (response.errorMessage) {
                                    // Display general error message
                                    $(".validation-summary-errors ul").html("<li>" + response.errorMessage + "</li>");
                                } else {
                                    // Unspecified error
                                    $(".validation-summary-errors ul").html("<li>An error occurred. Please try again.</li>");
                                }
                            }
                        },
                        error: function () {
                            $(".validation-summary-errors ul").html("<li>A server error occurred. Please try again later.</li>");
                        }
                    });
            });

            $(document).on("click", "#submitUpdate", function (event) {
                event.preventDefault();
                // Check if the form is valid according to client-side validation
                $.post("@Url.Action("Update", "NewsArticle")", $("#updateNewsForm").serialize(), function (response) {
                        if (response.success) {
                            // Success: hide modal and reload page
                            Swal.fire({
                                title: 'Updated!',
                                text: 'Updated successfull!',
                                icon: 'success',
                                timer: 2000,
                                showConfirmButton: true,
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    location.reload();
                                }
                            });
                        } else {
                            // Handle server-side validation or other errors
                            if (response.errors) {
                                // Display validation errors returned from server
                                displayValidationErrors(response.errors);
                            } else if (response.errorMessage) {
                                // Display general error message
                                $(".validation-summary-errors ul").html("<li>" + response.errorMessage + "</li>");
                            } else {
                                // Unspecified error
                                $(".validation-summary-errors ul").html("<li>An error occurred. Please try again.</li>");
                            }
                        }
                }, "json");
            });

            // Function to display server-side validation errors using the same format as client-side validation
            function displayValidationErrors(errors) {
                // Clear existing errors
                $(".validation-summary-errors ul").empty();
                $(".field-validation-error").empty();

                // Add new errors
                $.each(errors, function (key, value) {
                    // Handle field-specific errors
                    $(`span[data-valmsg-for="${key}"]`).text(value[0]);

                    // Add to summary
                    $(".validation-summary-errors ul").append(`<li>${value[0]}</li>`);
                });
            }

            
        });
	</script>
}